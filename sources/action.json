{"math/abs" : {"name" : "math/abs","id" : "d6/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CAbs","briefdescription": "action for absolute value.","detaildescription": "The action calculates $ \\lvert x_i \\rvert $ for all arguments <pre><code>[A|B|C]=math/abs(-1,-5,3);\n</code></pre> ","group" : "math","see": ["https://en.wikipedia.org/wiki/Absolute_value"],"warning": [],"note": []},"math/acos" : {"name" : "math/acos","id" : "de/d08/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CACos","briefdescription": "action for arc cosinus value.","detaildescription": "The action calculates $ acos( x_i ) $ for all arguments, the return value is in $ [0, \\pi) $ , the arguments must be in radians. <pre><code>[A|B|C]=math/acos(-1,-5,3);\n</code></pre> ","group" : "math","see": ["https://en.wikipedia.org/wiki/Inverse_trigonometric_functions"],"warning": [],"note": []},"generic/storage/add" : {"name" : "generic/storage/add","id" : "da/d69/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1storage_1_1CAdd","briefdescription": "adds or overwrites an element in the agent-storage","detaildescription": "","group" : "generic/storage","see": [],"warning": [],"note": []},"math/statistic/addstatisticvalue" : {"name" : "math/statistic/addstatisticvalue","id" : "d9/d8d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1statistic_1_1CAddStatisticValue","briefdescription": "action to push a value to the statistic object","detaildescription": "","group" : "math/statistic","see": [],"warning": [],"note": []},"math/asin" : {"name" : "math/asin","id" : "d7/d1b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CASin","briefdescription": "action for arc sinus value.","detaildescription": "The action calculates $ asin( x_i ) $ for all arguments, the return value is in $ [0, \\pi) $ , the arguments must be in radians. <pre><code>[A|B|C]=math/asin(-1,-5,3);\n</code></pre> ","group" : "math","see": ["https://en.wikipedia.org/wiki/Inverse_trigonometric_functions"],"warning": [],"note": []},"collection/multimap/asmap" : {"name" : "collection/multimap/asmap","id" : "d0/df7/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1multimap_1_1CAsMap","briefdescription": "returns the multimap as map","detaildescription": "","group" : "collection/multimap","see": [],"warning": [],"note": []},"math/blas/matrix/assign" : {"name" : "math/blas/matrix/assign","id" : "da/d39/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CAssign","briefdescription": "assigns a value or matrix to all elements","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"math/blas/vector/assign" : {"name" : "math/blas/vector/assign","id" : "dc/d88/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1vector_1_1CAssign","briefdescription": "assigns a value or matrix to all elements","detaildescription": "","group" : "math/blas/vector","see": [],"warning": [],"note": []},"math/atan" : {"name" : "math/atan","id" : "d2/d8f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CATan","briefdescription": "action for tangens value.","detaildescription": "The action calculates $ tan( x_i ) $ for all arguments, the return value is in $ [0, \\pi) $ , the arguments must be in radians. <pre><code>[A|B|C]=math/atan(-1,-5,3);\n</code></pre> ","group" : "math","see": ["https://en.wikipedia.org/wiki/Inverse_trigonometric_functions"],"warning": [],"note": []},"math/average" : {"name" : "math/average","id" : "d9/d0d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CAverage","briefdescription": "action for average.","detaildescription": "The action calculates $ \\frac{1}{i} \\sum_{i} x_i $ over all arguments, action fails never, but can throw a runtime exception <pre><code>A=math/average(1,3,9,[10,[11,12]]);\n</code></pre> ","group" : "math","see": ["https://en.wikipedia.org/wiki/Average"],"warning": [],"note": []},"generic/string/base64decode" : {"name" : "generic/string/base64decode","id" : "d4/d0e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1string_1_1CBase64Decode","briefdescription": "action to encodes a string with Base64","detaildescription": "","group" : "generic/string","see": ["https://en.wikipedia.org/wiki/Base64"],"warning": [],"note": []},"generic/string/base64encode" : {"name" : "generic/string/base64encode","id" : "d7/dad/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1string_1_1CBase64Encode","briefdescription": "action to encodes a string with Base64","detaildescription": "","group" : "generic/string","see": ["https://en.wikipedia.org/wiki/Base64"],"warning": [],"note": []},"generic/agent/belieflist" : {"name" : "generic/agent/belieflist","id" : "da/de7/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1agent_1_1CBeliefList","briefdescription": "returns a list of all belief literals","detaildescription": "","group" : "generic/agent","see": [],"warning": [],"note": []},"math/binomial" : {"name" : "math/binomial","id" : "d4/d52/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CBinomial","briefdescription": "action for calculating binomial coefficient.","detaildescription": "Calcluates $ \\binom{n}{k} $ , where n is the first argument and k the second, the action fails never <pre><code>B=math/binomial(49,6);\n</code></pre> ","group" : "math","see": ["https://en.wikipedia.org/wiki/Binomial_coefficient"],"warning": [],"note": []},"math/ceil" : {"name" : "math/ceil","id" : "d3/d24/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CCeil","briefdescription": "action for ceil value.","detaildescription": "Ceils any argument values with $ \\lceil x_i \\rceil $ and returns all values, the action never fails <pre><code>[A|B|C]=math/ceil(1.3,2.8,9.7);\n</code></pre> ","group" : "math","see": ["https://en.wikipedia.org/wiki/Floor_and_ceiling_functions"],"warning": [],"note": []},"generic/storage/clear" : {"name" : "generic/storage/clear","id" : "d1/d01/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1storage_1_1CClear","briefdescription": "removes all elements of the storage which are not forbidden","detaildescription": "","group" : "generic/storage","see": [],"warning": [],"note": []},"generic/agent/clearbeliefbase" : {"name" : "generic/agent/clearbeliefbase","id" : "d3/d3f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1agent_1_1CClearBeliefbase","briefdescription": "clears all elements from the beliefbase","detaildescription": "","group" : "generic/agent","see": [],"warning": [],"note": []},"math/statistic/clearstatistic" : {"name" : "math/statistic/clearstatistic","id" : "de/d8e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1statistic_1_1CClearStatistic","briefdescription": "action to clears the statistic","detaildescription": "","group" : "math/statistic","see": [],"warning": [],"note": []},"math/blas/matrix/column" : {"name" : "math/blas/matrix/column","id" : "d6/d23/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CColumn","briefdescription": "returns a single column of a matrix","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"math/blas/matrix/columnnumber" : {"name" : "math/blas/matrix/columnnumber","id" : "da/d58/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CColumnNumber","briefdescription": "returns the column number of a matrix","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"collection/list/complement" : {"name" : "collection/list/complement","id" : "d5/d45/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1list_1_1CComplement","briefdescription": "creates the complement between lists.","detaildescription": "The action uses two input arguments $ \\mathbb{A} $ and $ \\mathbb{B} $ and returns a list of all elements which contains $ \\mathbb{A} \\setminus \\mathbb{B} $ , the action fails never <pre><code>L=collection/list/complement([1,2,3],[3,4,5]);\n</code></pre> ","group" : "collection/list","see": [],"warning": [],"note": []},"generic/string/concat" : {"name" : "generic/string/concat","id" : "d0/dad/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1string_1_1CConcat","briefdescription": "action to concat strings","detaildescription": "","group" : "generic/string","see": [],"warning": [],"note": []},"math/blas/matrix/condition" : {"name" : "math/blas/matrix/condition","id" : "d2/d29/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CCondition","briefdescription": "returns the condition of a matrix","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"generic/string/contains" : {"name" : "generic/string/contains","id" : "d8/d45/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1string_1_1CContains","briefdescription": "action to check string for a substring","detaildescription": "","group" : "generic/string","see": [],"warning": [],"note": []},"math/blas/matrix/copy" : {"name" : "math/blas/matrix/copy","id" : "d3/d82/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CCopy","briefdescription": "returns a copy of the matrix","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"math/blas/vector/copy" : {"name" : "math/blas/vector/copy","id" : "da/d17/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1vector_1_1CCopy","briefdescription": "returns a copy of the matrix","detaildescription": "","group" : "math/blas/vector","see": [],"warning": [],"note": []},"math/cos" : {"name" : "math/cos","id" : "dd/d5d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CCos","briefdescription": "action for cosinus value.","detaildescription": "The action calculates $ cos( x_i ) $ for each argument in radians and returns the values <pre><code>[A|B]=math/cos(3,4);\n</code></pre> ","group" : "math","see": [],"warning": [],"note": []},"math/cosh" : {"name" : "math/cosh","id" : "d9/d8d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CCosh","briefdescription": "action for cosinus hyperbolic value.","detaildescription": "The action calculates for all arguments $ cosh( x_i ) $ and fails never, the arguments must be in radians. <pre><code>[A|B]=math/cosh(3,4);\n</code></pre> ","group" : "math","see": [],"warning": [],"note": []},"collection/list/create" : {"name" : "collection/list/create","id" : "d2/dd3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1list_1_1CCreate","briefdescription": "creates a list.","detaildescription": "Creates a list of the arguments, so each argument of the action is put to the list, is the argument empty an empty-list object will be returned, the action fails never <pre><code>L=collection/list/create(\"a\",1,\"b\",2);\n</code></pre> ","group" : "collection/list","see": [],"warning": [],"note": []},"collection/tuple/create" : {"name" : "collection/tuple/create","id" : "d1/d2e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1tuple_1_1CCreate","briefdescription": "creates a tuple of two elements","detaildescription": "","group" : "collection/tuple","see": [],"warning": [],"note": []},"math/interpolate/create" : {"name" : "math/interpolate/create","id" : "d1/d80/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1interpolate_1_1CCreate","briefdescription": "action to create a spline interpolation","detaildescription": "","group" : "math/interpolate","see": [],"warning": [],"note": []},"math/linearprogram/create" : {"name" : "math/linearprogram/create","id" : "d1/db4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1linearprogram_1_1CCreate","briefdescription": "action to create a linear program with an objective functions $ \\left( \\sum_{i=1} c_i \\cdot x_i \\right) + d $ ","detaildescription": "","group" : "math/linearprogram","see": [],"warning": [],"note": []},"collection/map/create" : {"name" : "collection/map/create","id" : "db/d69/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1map_1_1CCreate","briefdescription": "creates a hashmap","detaildescription": "","group" : "collection/map","see": [],"warning": [],"note": []},"math/blas/matrix/create" : {"name" : "math/blas/matrix/create","id" : "da/de1/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CCreate","briefdescription": "creates a dense- or sparse-matrix","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"collection/multimap/create" : {"name" : "collection/multimap/create","id" : "d8/d29/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1multimap_1_1CCreate","briefdescription": "creates a multi-hashmap","detaildescription": "","group" : "collection/multimap","see": [],"warning": [],"note": []},"math/blas/vector/create" : {"name" : "math/blas/vector/create","id" : "d3/deb/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1vector_1_1CCreate","briefdescription": "creates a dense- or sparse-vector","detaildescription": "","group" : "math/blas/vector","see": [],"warning": [],"note": []},"math/statistic/createdistribution" : {"name" : "math/statistic/createdistribution","id" : "d0/d8f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1statistic_1_1CCreateDistribution","briefdescription": "creates a distribution object","detaildescription": "","group" : "math/statistic","see": [],"warning": [],"note": []},"crypto/createkey" : {"name" : "crypto/createkey","id" : "db/d80/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1crypto_1_1CCreateKey","briefdescription": "creates an encrypting / decrypting key pair.","detaildescription": "The argument is a string with the cryptographic algorithm AES, DES or RSA and the action return a key pair, the action fails if the key cannot generated <pre><code>[PublicKey,PrivateKey]=cypto/createkey(\"AES|DES|RSA\");\n</code></pre> ","group" : "crypto","see": ["https://en.wikipedia.org/wiki/Advanced_Encryption_Standard","https://en.wikipedia.org/wiki/Data_Encryption_Standard","https://en.wikipedia.org/wiki/RSA_(cryptosystem)"],"warning": [],"note": ["The private key is set on RSA algorithm only "]},"generic/agent/createliteral" : {"name" : "generic/agent/createliteral","id" : "d2/da0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1agent_1_1CCreateLiteral","briefdescription": "creates a literal by the input data","detaildescription": "","group" : "generic/agent","see": [],"warning": [],"note": []},"math/statistic/createstatistic" : {"name" : "math/statistic/createstatistic","id" : "de/d2f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1statistic_1_1CCreateStatistic","briefdescription": "action to create a summary statistic","detaildescription": "","group" : "math/statistic","see": [],"warning": [],"note": []},"generic/datetime/cycletime" : {"name" : "generic/datetime/cycletime","id" : "d1/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1datetime_1_1CCycleTime","briefdescription": "action to get time in nanoseconds to the last cycle call","detaildescription": "","group" : "generic/datetime","see": [],"warning": [],"note": []},"generic/datetime/date" : {"name" : "generic/datetime/date","id" : "d8/d34/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1datetime_1_1CDate","briefdescription": "action for getting the current date","detaildescription": "","group" : "generic/datetime","see": [],"warning": [],"note": []},"generic/datetime/datetime" : {"name" : "generic/datetime/datetime","id" : "d7/d58/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1datetime_1_1CDateTime","briefdescription": "action to create a date-time structure","detaildescription": "","group" : "generic/datetime","see": [],"warning": [],"note": []},"crypto/decrypt" : {"name" : "crypto/decrypt","id" : "d2/d6a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1crypto_1_1CDecrypt","briefdescription": "dencrypting algorithm for decrypting data.","detaildescription": "The actions decrypts data by the key, that is set on the first argument, all other arguments are datasets for encrypting, the actions returns all drcrypted datasets back and fails if a dataset cannot be decrypted <pre><code>[DecyptData1|DecyptData2|DecyptData3]=crypto/decrypt(Key,Dataset1,Dataset2,Dataset3);\n</code></pre> ","group" : "crypto","see": [],"warning": [],"note": []},"math/degrees" : {"name" : "math/degrees","id" : "de/d0c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CDegrees","briefdescription": "action for converting angle value to degree value.","detaildescription": "Converts all radian arguments into degree values $ \\frac{x_i \\cdot 180}{\\pi} $  <pre><code>[A|B]=math/degrees();\n</code></pre> ","group" : "math","see": ["https://en.wikipedia.org/wiki/Radian"],"warning": [],"note": []},"math/blas/matrix/determinant" : {"name" : "math/blas/matrix/determinant","id" : "da/d05/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CDeterminant","briefdescription": "returns the determinant of a matrix","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"math/blas/vector/dotproduct" : {"name" : "math/blas/vector/dotproduct","id" : "da/da0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1vector_1_1CDotProduct","briefdescription": "returns sum of a vector","detaildescription": "","group" : "math/blas/vector","see": [],"warning": [],"note": []},"math/blas/matrix/eigenvalue" : {"name" : "math/blas/matrix/eigenvalue","id" : "d4/d99/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CEigenValue","briefdescription": "creates the eigenvalues of a matrix","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"math/blas/elementwise" : {"name" : "math/blas/elementwise","id" : "db/d6e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1CElementWise","briefdescription": "elementweise vector / matrix operation","detaildescription": "","group" : "math/blas","see": [],"warning": [],"note": []},"crypto/encrypt" : {"name" : "crypto/encrypt","id" : "d9/d78/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1crypto_1_1CEncrypt","briefdescription": "encrypting algorithm.","detaildescription": "Encrypts a set of datasets, which can be complex objects, the first argument of the action is the encrypting key and all other arguments are datasets, the action returns all encypted datasets and fails if one encryption fails <pre><code>[Encypt1|Encrypt2|Encypt3]=crypto/encrypt(Key,Dataset1,Dataset2,Dataset3);\n</code></pre> ","group" : "crypto","see": [],"warning": [],"note": []},"generic/string/endswith" : {"name" : "generic/string/endswith","id" : "d7/d21/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1string_1_1CEndsWith","briefdescription": "action to check string for starts-with","detaildescription": "","group" : "generic/string","see": [],"warning": [],"note": []},"math/linearprogram/equationconstraint" : {"name" : "math/linearprogram/equationconstraint","id" : "df/da5/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1linearprogram_1_1CEquationConstraint","briefdescription": "add a linear value constraint to the LP with the definition $ \\left( \\sum_{i=1} c_i \\cdot x_i \\right) + c_{const} = \\left( \\sum_{i=1} r_i \\cdot x_i \\right) + r_{const} $ , $ \\left( \\sum_{i=1} c_i \\cdot x_i \\right) + c_{const} \\geq \\left( \\sum_{i=1} r_i \\cdot x_i \\right) + r_{const} $  $ \\left( \\sum_{i=1} c_i \\cdot x_i \\right) + c_{const} \\leq \\left( \\sum_{i=1} r_i \\cdot x_i \\right) + r_{const} $ ","detaildescription": "","group" : "math/linearprogram","see": [],"warning": [],"note": []},"generic/storage/exists" : {"name" : "generic/storage/exists","id" : "df/dc2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1storage_1_1CExists","briefdescription": "check if an element exists within the agent-storage","detaildescription": "","group" : "generic/storage","see": [],"warning": [],"note": []},"math/exp" : {"name" : "math/exp","id" : "d1/d64/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CExp","briefdescription": "action for exponential value $ e^{x_i} $ ","detaildescription": "","group" : "math","see": [],"warning": [],"note": []},"math/statistic/exponentialproportionateselection" : {"name" : "math/statistic/exponentialproportionateselection","id" : "db/d93/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1statistic_1_1CExponentialProportionateSelection","briefdescription": "action to define a fitness-proportinate-selection mechanism","detaildescription": "","group" : "math/statistic","see": ["https://en.wikipedia.org/wiki/Boltzmann_distribution","https://en.wikipedia.org/wiki/Log-linear_model"],"warning": [],"note": []},"math/factorial" : {"name" : "math/factorial","id" : "d9/dc9/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CFactorial","briefdescription": "action for calculating factorial $ ! x_i $ ","detaildescription": "","group" : "math","see": [],"warning": [],"note": []},"collection/tuple/flat" : {"name" : "collection/tuple/flat","id" : "d7/d1e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1tuple_1_1CFlat","briefdescription": "unflats the tuple into variables","detaildescription": "","group" : "collection/tuple","see": [],"warning": [],"note": []},"collection/list/flatconcat" : {"name" : "collection/list/flatconcat","id" : "df/dd9/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1list_1_1CFlatConcat","briefdescription": "returns a flat concated list of any term data.","detaildescription": "The arguments of this action are nested lists and the action transfer all nested structures to a straight list, the action fails never <pre><code>F=collection/list/flatconcat([1,2,[3,4]],[[1,2],[7,8]]);\n</code></pre> ","group" : "collection/list","see": [],"warning": [],"note": []},"math/floor" : {"name" : "math/floor","id" : "d4/dc7/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CFloor","briefdescription": "action for floor value.","detaildescription": "Floors any argument values with $ \\lfloor x_i \\rfloor $ and returns all values, the action never fails <pre><code>[A|B|C]=math/floor(1.3,2.8,9.7);\n</code></pre> ","group" : "math","see": ["https://en.wikipedia.org/wiki/Floor_and_ceiling_functions"],"warning": [],"note": []},"math/blas/matrix/frobeniusnorm" : {"name" : "math/blas/matrix/frobeniusnorm","id" : "df/d3b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CFrobeniusNorm","briefdescription": "returns the frobenius-norm of a matrix","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"math/blas/vector/fromlist" : {"name" : "math/blas/vector/fromlist","id" : "d4/dec/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1vector_1_1CFromList","briefdescription": "creates a dense- or sparse-vector from a list","detaildescription": "","group" : "math/blas/vector","see": [],"warning": [],"note": []},"math/geometricmean" : {"name" : "math/geometricmean","id" : "d7/d0c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CGeometricMean","briefdescription": "action for geometric mean.","detaildescription": "The action calculates $ \\sqrt[i]{\\prod_{i} x_i} $ over all arguments, action fails never <pre><code>G=math/geometricmean(1,3,9,[10,[11,12]]);\n</code></pre> ","group" : "math","see": ["https://en.wikipedia.org/wiki/Average"],"warning": [],"note": []},"collection/list/get" : {"name" : "collection/list/get","id" : "df/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1list_1_1CGet","briefdescription": "returns an element of the list by the index.","detaildescription": "The first argument is a list and the second an index, so the action returns the element, the action fails never <pre><code>V=collection/list/get(L,2);\n</code></pre> ","group" : "collection/list","see": [],"warning": [],"note": []},"collection/map/get" : {"name" : "collection/map/get","id" : "d1/d21/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1map_1_1CGet","briefdescription": "returns an element of the map by its key value","detaildescription": "","group" : "collection/map","see": [],"warning": [],"note": []},"math/blas/matrix/get" : {"name" : "math/blas/matrix/get","id" : "d6/da4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CGet","briefdescription": "returns a single element of a matrix","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"math/blas/vector/get" : {"name" : "math/blas/vector/get","id" : "d3/d96/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1vector_1_1CGet","briefdescription": "returns a single element of a vector","detaildescription": "","group" : "math/blas/vector","see": [],"warning": [],"note": []},"collection/multimap/get" : {"name" : "collection/multimap/get","id" : "dc/d91/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1multimap_1_1CGet","briefdescription": "get a element-list of the multimap by key","detaildescription": "","group" : "collection/multimap","see": [],"warning": [],"note": []},"math/statistic/getstatisticvalue" : {"name" : "math/statistic/getstatisticvalue","id" : "d5/d0d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1statistic_1_1CGetStatisticValue","briefdescription": "action to return a statistic value","detaildescription": "","group" : "math/statistic","see": [],"warning": [],"note": []},"math/harmonicmean" : {"name" : "math/harmonicmean","id" : "d7/d6b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CHarmonicMean","briefdescription": "action for harmonic mean.","detaildescription": "The action calculates $ \\frac{i}]{\\sum_{i} \\frac{1}{x_i}} $ over all arguments, action fails never <pre><code>G=math/harmonicmean(1,3,9,[10,[11,12]]);\n</code></pre> ","group" : "math","see": ["https://en.wikipedia.org/wiki/Average"],"warning": [],"note": []},"crypto/hash" : {"name" : "crypto/hash","id" : "d7/df5/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1crypto_1_1CHash","briefdescription": "hash algorithm.","detaildescription": "The actions creates a hash values of datasets, the first argument is the name of the hasing algorithm (Adler-32, CRC-32, CRC-32C, Murmur3-32, Murmur3-128, Siphash-2-4, MD2, MD5, SHA-1, SHA-224, SHA-256, SHA-384, SHA-512), for all other arguments a hash value is calculated and the action returns the hash values back, only if the hash algorithm is unknown the action wil fail <pre><code>[Hash1|Hash2|Hash3]=crypto/hash(\"Adler-32|CRC-32|CRC-32C|...\",Dataset1,Dataset2,Dataset3);\n</code></pre> ","group" : "crypto","see": ["https://en.wikipedia.org/wiki/Secure_Hash_Algorithm","https://en.wikipedia.org/wiki/MD2_(cryptography)","https://en.wikipedia.org/wiki/MD5","https://en.wikipedia.org/wiki/Adler-32","https://en.wikipedia.org/wiki/Cyclic_redundancy_check","https://en.wikipedia.org/wiki/MurmurHash","https://en.wikipedia.org/wiki/SipHash","http://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#MessageDigest","https://github.com/google/guava/wiki/HashingExplained"],"warning": [],"note": []},"math/hypot" : {"name" : "math/hypot","id" : "d5/ddb/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CHypot","briefdescription": "action for calculating $ \\sqrt{ x^2 + y^2 } $ ","detaildescription": "","group" : "math","see": [],"warning": [],"note": []},"math/shape/incircle" : {"name" : "math/shape/incircle","id" : "dc/d5a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1shape_1_1CInCircle","briefdescription": "action check if a point is within a circle","detaildescription": "","group" : "math/shape","see": [],"warning": [],"note": []},"math/blas/matrix/infinitynorm" : {"name" : "math/blas/matrix/infinitynorm","id" : "d8/d89/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CInfinityNorm","briefdescription": "returns the infinitiy-norm of a matrix","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"math/shape/inrectangle" : {"name" : "math/shape/inrectangle","id" : "df/dee/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1shape_1_1CInRectangle","briefdescription": "action check if a point within a rectangle","detaildescription": "","group" : "math/shape","see": [],"warning": [],"note": []},"math/interpolate/interpolate" : {"name" : "math/interpolate/interpolate","id" : "dd/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1interpolate_1_1CInterpolate","briefdescription": "action to create interpolated values","detaildescription": "","group" : "math/interpolate","see": [],"warning": [],"note": []},"collection/list/intersect" : {"name" : "collection/list/intersect","id" : "d4/d8f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1list_1_1CIntersect","briefdescription": "creates the intersection between lists.","detaildescription": "All arguments are lists and the action returns the intersection $ \\cap M_i \\forall i \\in \\mathbb{N} $ , the action fails never <pre><code>I=collection/list/intersect([1,2,[3,4]],[3,4,[8,9]],[1,2,3,5]);\n</code></pre> ","group" : "collection/list","see": [],"warning": [],"note": []},"math/shape/intriangle" : {"name" : "math/shape/intriangle","id" : "df/d99/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1shape_1_1CInTriangle","briefdescription": "action check if a point is within a triangle","detaildescription": "","group" : "math/shape","see": ["https://en.wikipedia.org/wiki/Barycentric_coordinate_system"],"warning": [],"note": []},"math/blas/matrix/invert" : {"name" : "math/blas/matrix/invert","id" : "df/df2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CInvert","briefdescription": "inverts the matrix","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"generic/type/is" : {"name" : "generic/type/is","id" : "db/d1c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1type_1_1CIs","briefdescription": "action to check if a type is a class","detaildescription": "","group" : "generic/type","see": [],"warning": [],"note": []},"collection/list/isempty" : {"name" : "collection/list/isempty","id" : "db/de9/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1list_1_1CIsEmpty","briefdescription": "checks a list if empty.","detaildescription": "Concats all list arguments (and removes the nested structures) and returns a boolean of the empty check, the action fails never <pre><code>E=collection/list/isempty([]);\n</code></pre> ","group" : "collection/list","see": [],"warning": [],"note": []},"generic/type/isnumeric" : {"name" : "generic/type/isnumeric","id" : "d8/d61/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1type_1_1CIsNumeric","briefdescription": "action to check if a type is a number","detaildescription": "","group" : "generic/type","see": [],"warning": [],"note": []},"math/isprime" : {"name" : "math/isprime","id" : "d1/db9/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CIsPrime","briefdescription": "action for checking for a prime number","detaildescription": "","group" : "math","see": [],"warning": [],"note": []},"generic/type/isstring" : {"name" : "generic/type/isstring","id" : "dd/d00/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1type_1_1CIsString","briefdescription": "action to check if a type is a string","detaildescription": "","group" : "generic/type","see": [],"warning": [],"note": []},"rest/jsonlist" : {"name" : "rest/jsonlist","id" : "db/d28/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1rest_1_1CJsonList","briefdescription": "action for calling a restful webservice with a JSON object list.","detaildescription": "Creates a literal based on an JSON webservice data, the first argument is the URL of the webservice, all other arguments are the literal elements of the returning literal, the webservice must return a JSON list and the last argument will used to encapsulate the list elements <pre><code>W=rest/jsonlist(\"https://api.github.com/repos/LightJason/AgentSpeak/commits\",\"github\",\"elements\");\n</code></pre> ","group" : "rest","see": ["https://en.wikipedia.org/wiki/Representational_state_transfer","https://en.wikipedia.org/wiki/Web_service","https://en.wikipedia.org/wiki/JSON"],"warning": [],"note": []},"rest/jsonobject" : {"name" : "rest/jsonobject","id" : "d6/d4e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1rest_1_1CJsonObject","briefdescription": "action for calling a restful webservice with a json object.","detaildescription": "Creates a literal based on an JSON webservice data, the first argument is the URL of the webservice, all other arguments are the literal elements of the returning literal, the webservice must return a JSON object <pre><code>W=rest/jsonobject(\"https://maps.googleapis.com/maps/api/geocode/json?address=Clausthal-Zellerfeld\",\"google\",\"location\");\n</code></pre> ","group" : "rest","see": ["https://en.wikipedia.org/wiki/Representational_state_transfer","https://en.wikipedia.org/wiki/Web_service","https://en.wikipedia.org/wiki/JSON"],"warning": [],"note": []},"collection/map/keys" : {"name" : "collection/map/keys","id" : "d7/de2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1map_1_1CKeys","briefdescription": "returns all key values of the map","detaildescription": "","group" : "collection/map","see": [],"warning": [],"note": []},"math/statistic/linearproportionateselection" : {"name" : "math/statistic/linearproportionateselection","id" : "d3/df9/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1statistic_1_1CLinearProportionateSelection","briefdescription": "action to define a exponential fitness-proportinate-selection mechanism","detaildescription": "","group" : "math/statistic","see": ["https://en.wikipedia.org/wiki/Fitness_proportionate_selection"],"warning": [],"note": []},"math/log" : {"name" : "math/log","id" : "d6/d74/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CLog","briefdescription": "action for logarithm value $ log( x_i ) $ ","detaildescription": "","group" : "math","see": [],"warning": [],"note": []},"math/log10" : {"name" : "math/log10","id" : "dc/dca/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CLog10","briefdescription": "action for logarithm (base 10) value $ log_{10} x_i $ ","detaildescription": "","group" : "math","see": [],"warning": [],"note": []},"generic/string/lower" : {"name" : "generic/string/lower","id" : "de/d1f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1string_1_1CLower","briefdescription": "action to create a lower-case string","detaildescription": "","group" : "generic/string","see": [],"warning": [],"note": []},"math/max" : {"name" : "math/max","id" : "d4/d67/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CMax","briefdescription": "action for maximum $ max( x_0, x_1, \\ldots, x_i ) $ ","detaildescription": "","group" : "math","see": [],"warning": [],"note": []},"math/maxindex" : {"name" : "math/maxindex","id" : "dd/dc3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CMaxIndex","briefdescription": "action for index of maximum","detaildescription": "","group" : "math","see": [],"warning": [],"note": []},"math/min" : {"name" : "math/min","id" : "dc/dde/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CMin","briefdescription": "action for minimum $ min( x_0, x_1, \\ldots, x_i ) $ ","detaildescription": "","group" : "math","see": [],"warning": [],"note": []},"math/minindex" : {"name" : "math/minindex","id" : "dc/d8e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CMinIndex","briefdescription": "action for index of minimum","detaildescription": "","group" : "math","see": [],"warning": [],"note": []},"math/blas/multiply" : {"name" : "math/blas/multiply","id" : "d4/d67/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1CMultiply","briefdescription": "defines matrix- / vector-products","detaildescription": "","group" : "math/blas","see": [],"warning": [],"note": []},"math/nextprime" : {"name" : "math/nextprime","id" : "dd/d0a/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CNextPrime","briefdescription": "action for create the next prime number","detaildescription": "","group" : "math","see": [],"warning": [],"note": []},"math/blas/matrix/nonzero" : {"name" : "math/blas/matrix/nonzero","id" : "df/d00/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CNonZero","briefdescription": "returns the number of non-zero cells","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"math/blas/vector/nonzero" : {"name" : "math/blas/vector/nonzero","id" : "df/d55/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1vector_1_1CNonZero","briefdescription": "returns the number of non-zero cells","detaildescription": "","group" : "math/blas/vector","see": [],"warning": [],"note": []},"math/blas/matrix/onenorm" : {"name" : "math/blas/matrix/onenorm","id" : "d2/dce/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1COneNorm","briefdescription": "returns the one-norm of a matrix","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"math/blas/matrix/parse" : {"name" : "math/blas/matrix/parse","id" : "dd/dfe/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CParse","briefdescription": "creates a dense- or sparse-matrix from a string semicolon splits the rows, spaces / comma splits the columns","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"math/blas/vector/parse" : {"name" : "math/blas/vector/parse","id" : "de/ddf/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1vector_1_1CParse","briefdescription": "creates a dense- or sparse-vector from as string seperator is comma, semicolon or space","detaildescription": "","group" : "math/blas/vector","see": [],"warning": [],"note": []},"generic/type/parsefloat" : {"name" : "generic/type/parsefloat","id" : "d5/d99/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1type_1_1CParseFloat","briefdescription": "action for parsing a float from string","detaildescription": "","group" : "generic/type","see": [],"warning": [],"note": []},"generic/type/parseint" : {"name" : "generic/type/parseint","id" : "db/d3c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1type_1_1CParseInt","briefdescription": "action for parsing an integer from string","detaildescription": "","group" : "generic/type","see": [],"warning": [],"note": []},"generic/type/parseliteral" : {"name" : "generic/type/parseliteral","id" : "df/d70/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1type_1_1CParseLiteral","briefdescription": "action for parsing a literal from string","detaildescription": "","group" : "generic/type","see": [],"warning": [],"note": []},"generic/agent/planlist" : {"name" : "generic/agent/planlist","id" : "d2/ddb/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1agent_1_1CPlanList","briefdescription": "action to get plan-information as a map with string with literal of plan-literal as tupel of successful and failed plans","detaildescription": "","group" : "generic/agent","see": [],"warning": [],"note": []},"math/blas/matrix/power" : {"name" : "math/blas/matrix/power","id" : "d0/d30/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CPower","briefdescription": "returns the matrix power","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"math/primefactors" : {"name" : "math/primefactors","id" : "dd/d83/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CPrimeFactors","briefdescription": "action for creating prime factors","detaildescription": "","group" : "math","see": [],"warning": [],"note": []},"generic/print" : {"name" : "generic/print","id" : "d9/dc7/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1CPrint","briefdescription": "action for sum of elements.","detaildescription": "Prints a set of messages to the commandline / output-stream, the command can be used with a variable set of arguments and fails never <pre><code>generic/print(\"stringA=\",A,\"--B=\",B,\"--C=\",C,\"--D=\",D,\"--X=\",X,\"--Y=\",Y);\n</code></pre> ","group" : "generic","see": [],"warning": [],"note": []},"collection/map/put" : {"name" : "collection/map/put","id" : "d8/dd0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1map_1_1CPut","briefdescription": "adds an element to the map","detaildescription": "","group" : "collection/map","see": [],"warning": [],"note": []},"collection/map/putifabsent" : {"name" : "collection/map/putifabsent","id" : "df/de3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1map_1_1CPutIfAbsent","briefdescription": "adds an element to the map iif not exists","detaildescription": "","group" : "collection/map","see": [],"warning": [],"note": []},"math/radians" : {"name" : "math/radians","id" : "d8/df6/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CRadians","briefdescription": "action for converting degree value into radian.","detaildescription": "Converts all degree arguments into radian values $ \\frac{x_i \\cdot \\pi}{180} $ ","group" : "math","see": ["https://en.wikipedia.org/wiki/Radian"],"warning": [],"note": []},"generic/string/random" : {"name" : "generic/string/random","id" : "d5/d1c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1string_1_1CRandom","briefdescription": "action to create a random string","detaildescription": "","group" : "generic/string","see": [],"warning": [],"note": []},"math/statistic/randomsample" : {"name" : "math/statistic/randomsample","id" : "d2/d98/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1statistic_1_1CRandomSample","briefdescription": "create a (set) of random values","detaildescription": "","group" : "math/statistic","see": [],"warning": [],"note": []},"math/statistic/randomsimple" : {"name" : "math/statistic/randomsimple","id" : "d5/d37/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1statistic_1_1CRandomSimple","briefdescription": "create a (set) of simple random values","detaildescription": "","group" : "math/statistic","see": [],"warning": [],"note": []},"collection/list/range" : {"name" : "collection/list/range","id" : "d2/d97/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1list_1_1CRange","briefdescription": "creates a list with a integer ranged list.","detaildescription": "Creates a list of integer values within the range $ [\\text{argument 1}, \\text{argument 2}) $ , the action fails never <pre><code>L=collection/list/create(0,10);\n</code></pre> ","group" : "collection/list","see": [],"warning": [],"note": []},"math/blas/matrix/rank" : {"name" : "math/blas/matrix/rank","id" : "d4/d46/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CRank","briefdescription": "rank of the matrix","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"generic/storage/remove" : {"name" : "generic/storage/remove","id" : "da/dfd/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1storage_1_1CRemove","briefdescription": "removes an element by name from the agent-storage","detaildescription": "","group" : "generic/storage","see": [],"warning": [],"note": []},"collection/map/remove" : {"name" : "collection/map/remove","id" : "d9/d36/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1map_1_1CRemove","briefdescription": "removes an element of the map","detaildescription": "","group" : "collection/map","see": [],"warning": [],"note": []},"collection/list/remove" : {"name" : "collection/list/remove","id" : "d9/dcf/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1list_1_1CRemove","briefdescription": "returns an element of the list by the index.","detaildescription": "Removes an element by the list index, the first argument is the list object, the second argument is the index, the action fails never <pre><code>collection/list/remove(L,3);\n</code></pre> ","group" : "collection/list","see": [],"warning": [],"note": []},"generic/string/replace" : {"name" : "generic/string/replace","id" : "d5/d96/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1string_1_1CReplace","briefdescription": "action to replace any occurence within a string","detaildescription": "","group" : "generic/string","see": [],"warning": [],"note": []},"generic/string/reverse" : {"name" : "generic/string/reverse","id" : "d4/d12/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1string_1_1CReverse","briefdescription": "action to reverse a string","detaildescription": "","group" : "generic/string","see": [],"warning": [],"note": []},"collection/list/reverse" : {"name" : "collection/list/reverse","id" : "db/d71/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1list_1_1CReverse","briefdescription": "reverses a list.","detaildescription": "All arguments of the action are lists and the action will remove nested structures and reverse all elements in a single list, the action fails never <pre><code>R=collection/list/reverse(L,[1,2],[3,4,[7,8]]);\n</code></pre> ","group" : "collection/list","see": [],"warning": [],"note": []},"math/round" : {"name" : "math/round","id" : "d6/d13/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CRound","briefdescription": "action for rounded value","detaildescription": "","group" : "math","see": [],"warning": [],"note": []},"math/blas/matrix/row" : {"name" : "math/blas/matrix/row","id" : "df/df3/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CRow","briefdescription": "returns a single row of a matrix","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"math/blas/matrix/rownumber" : {"name" : "math/blas/matrix/rownumber","id" : "df/d98/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CRowNumber","briefdescription": "returns the row number of a matrix","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"collection/list/set" : {"name" : "collection/list/set","id" : "de/d89/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1list_1_1CSet","briefdescription": "adds an element to the list.","detaildescription": "Sets an element within the list by index, the first argument is the list object, the second the index value and third the new value of the element, the action fails never <pre><code>collection/list/set(L,2,\"astringvalue\");\n</code></pre> ","group" : "collection/list","see": [],"warning": [],"note": []},"math/blas/matrix/set" : {"name" : "math/blas/matrix/set","id" : "d1/d48/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CSet","briefdescription": "set a single element of a matrix","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"math/blas/vector/set" : {"name" : "math/blas/vector/set","id" : "de/d7f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1vector_1_1CSet","briefdescription": "set a single element of a matrix","detaildescription": "","group" : "math/blas/vector","see": [],"warning": [],"note": []},"math/sigmoid" : {"name" : "math/sigmoid","id" : "da/d60/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CSigmoid","briefdescription": "action for calculating a parameterized sigmoid function.","detaildescription": "Action calculates the sigmoid function for each value, the definition of the function is $ \\frac{\\alpha}{ \\beta + e^{ - \\gamma \\cdot t }} $  $ \\alpha $ is the first, $ \\beta $ the second and $ \\gamma $ the third argument, all values beginning at the fourth position will be used for t, so the action returns all values but and is never failing. <pre><code>[A|B|C]=math/sigmoid(1,1,1,10,20,30);\n</code></pre> ","group" : "math","see": ["https://en.wikipedia.org/wiki/Sigmoid_function"],"warning": [],"note": []},"math/signum" : {"name" : "math/signum","id" : "db/d09/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CSignum","briefdescription": "action for signum value","detaildescription": "","group" : "math","see": ["https://en.wikipedia.org/wiki/Sign_function"],"warning": [],"note": []},"math/sin" : {"name" : "math/sin","id" : "db/d79/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CSin","briefdescription": "action for sinus value.","detaildescription": "The action calculates $ sin( x_i ) $ for each argument in radians and returns the values <pre><code>[A|B]=math/sin(3,4);\n</code></pre> ","group" : "math","see": [],"warning": [],"note": []},"math/blas/matrix/singularvalue" : {"name" : "math/blas/matrix/singularvalue","id" : "dc/d9b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CSingularValue","briefdescription": "creates the singular value decomposition of a matrix","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"math/sinh" : {"name" : "math/sinh","id" : "d1/da0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CSinh","briefdescription": "action for sinus hyperbolic value $ sinh( x_i ) $ ","detaildescription": "","group" : "math","see": [],"warning": [],"note": []},"generic/string/size" : {"name" : "generic/string/size","id" : "da/d4f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1string_1_1CSize","briefdescription": "action to get the string length","detaildescription": "","group" : "generic/string","see": [],"warning": [],"note": []},"math/blas/size" : {"name" : "math/blas/size","id" : "d0/d17/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1CSize","briefdescription": "returns the elements within the BLAS structure","detaildescription": "","group" : "math/blas","see": [],"warning": [],"note": []},"collection/size" : {"name" : "collection/size","id" : "d5/dc6/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1CSize","briefdescription": "returns the size of the collection.","detaildescription": "The first parameter contains a collcation and the return argument is the size of this collection <pre><code>S=collection/size(L);\n</code></pre> ","group" : "collection","see": [],"warning": [],"note": []},"generic/agent/sleep" : {"name" : "generic/agent/sleep","id" : "d4/dc7/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1agent_1_1CSleep","briefdescription": "sets the agent to the sleep state for an infinity or fixed time","detaildescription": "","group" : "generic/agent","see": [],"warning": [],"note": []},"math/linearprogram/solve" : {"name" : "math/linearprogram/solve","id" : "de/d46/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1linearprogram_1_1CSolve","briefdescription": "solves the linear program","detaildescription": "","group" : "math/linearprogram","see": [],"warning": [],"note": []},"math/blas/matrix/solve" : {"name" : "math/blas/matrix/solve","id" : "d6/d26/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CSolve","briefdescription": "solver of matrix-equation $ A \\cdot X = B $ ","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"math/sqrt" : {"name" : "math/sqrt","id" : "d6/d00/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CSqrt","briefdescription": "action for sqrt value $ \\sqrt{ x_i } $ ","detaildescription": "","group" : "math","see": [],"warning": [],"note": []},"generic/string/startswith" : {"name" : "generic/string/startswith","id" : "d9/d5c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1string_1_1CStartsWith","briefdescription": "action to check string for starts-with","detaildescription": "","group" : "generic/string","see": [],"warning": [],"note": []},"math/stirling" : {"name" : "math/stirling","id" : "d3/d61/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CStirling","briefdescription": "action for calculating stirling number $ S(n,k) $ ","detaildescription": "","group" : "math","see": [],"warning": [],"note": []},"collection/list/sublist" : {"name" : "collection/list/sublist","id" : "d7/d0c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1list_1_1CSubList","briefdescription": "returns a sublist within the index range.","detaildescription": "Creates a sublist of an existing list by an index range, first argument is the list object, second the lower-bound, third the upper-bound within the range $ [ \\text{lower-bound}, \\text{upper-bound} ) $ , the action fails never <pre><code>LS=collection/list/get(L,2,5);\n</code></pre> ","group" : "collection/list","see": [],"warning": [],"note": []},"math/blas/matrix/submatrix" : {"name" : "math/blas/matrix/submatrix","id" : "dd/df6/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CSubMatrix","briefdescription": "returns a submatrix","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"math/sum" : {"name" : "math/sum","id" : "db/d02/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CSum","briefdescription": "action for sum of elements $ \\sum_{i} x_i $ ","detaildescription": "","group" : "math","see": [],"warning": [],"note": []},"math/blas/matrix/sum" : {"name" : "math/blas/matrix/sum","id" : "db/d0f/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CSum","briefdescription": "returns sum of a matrix","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"math/blas/vector/sum" : {"name" : "math/blas/vector/sum","id" : "d6/d37/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1vector_1_1CSum","briefdescription": "returns sum of a vector","detaildescription": "","group" : "math/blas/vector","see": [],"warning": [],"note": []},"collection/list/symmetricdifference" : {"name" : "collection/list/symmetricdifference","id" : "d4/ded/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1list_1_1CSymmetricDifference","briefdescription": "creates the symmetric difference between lists (difference of union and intersection).","detaildescription": "Creates the symmetric difference of all arguments, so all arguments are collections and the action will return a list with the symmetric difference $ (\\mathbb{X} \\setminus \\mathbb{Y}) \\cup (\\mathbb{B} \\setminus \\mathbb{A}) $ , the action fails never <pre><code>D=collection/list/symmetricdifference([1,2,[3,4]],[7,8,9,4],[[1,2],[3]]);\n</code></pre> ","group" : "collection/list","see": ["https://en.wikipedia.org/wiki/Symmetric_difference"],"warning": [],"note": []},"math/tan" : {"name" : "math/tan","id" : "d8/d9e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CTan","briefdescription": "action for tangens value $ tan( x_i ) $ ","detaildescription": "","group" : "math","see": [],"warning": [],"note": []},"math/tanh" : {"name" : "math/tanh","id" : "d6/dbd/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1CTanh","briefdescription": "action for tangens hyperbolic value $ tanh( x_i ) $ ","detaildescription": "","group" : "math","see": [],"warning": [],"note": []},"generic/throw" : {"name" : "generic/throw","id" : "d0/d8b/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1CThrow","briefdescription": "action for throwing a runtime execption.","detaildescription": "The action fails never but throws a Java runtime exception on a boolean condition, the first argument is a boolean value on true the exception is thrown, second argument can be a string with a message <pre><code>generic/throw(true,\"amessage\");\n</code></pre> ","group" : "generic","see": [],"warning": [],"note": ["the exception must be catched outside the agent call method "]},"generic/datetime/time" : {"name" : "generic/datetime/time","id" : "da/d43/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1datetime_1_1CTime","briefdescription": "action for getting the current time","detaildescription": "","group" : "generic/datetime","see": [],"warning": [],"note": []},"generic/type/to" : {"name" : "generic/type/to","id" : "d5/dcd/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1type_1_1CTo","briefdescription": "action to cast any java object type","detaildescription": "","group" : "generic/type","see": [],"warning": [],"note": []},"generic/type/tofloat" : {"name" : "generic/type/tofloat","id" : "d6/db0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1type_1_1CToFloat","briefdescription": "action to cast a vale to an floating-point value","detaildescription": "","group" : "generic/type","see": [],"warning": [],"note": []},"generic/type/toint" : {"name" : "generic/type/toint","id" : "da/df4/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1type_1_1CToInt","briefdescription": "action to cast a vale to an integral value","detaildescription": "","group" : "generic/type","see": [],"warning": [],"note": []},"math/blas/vector/tolist" : {"name" : "math/blas/vector/tolist","id" : "d6/d16/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1vector_1_1CToList","briefdescription": "converts a vector to a list","detaildescription": "","group" : "math/blas/vector","see": [],"warning": [],"note": []},"generic/type/tostring" : {"name" : "generic/type/tostring","id" : "d1/de2/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1type_1_1CToString","briefdescription": "action to convert any data to its string representation","detaildescription": "","group" : "generic/type","see": [],"warning": [],"note": []},"math/blas/matrix/trace" : {"name" : "math/blas/matrix/trace","id" : "d7/dc9/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CTrace","briefdescription": "creates the trace of the matrix","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"math/blas/matrix/transpose" : {"name" : "math/blas/matrix/transpose","id" : "db/d0e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CTranspose","briefdescription": "transpose the matrix","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"math/blas/matrix/twonorm" : {"name" : "math/blas/matrix/twonorm","id" : "db/d18/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1blas_1_1matrix_1_1CTwoNorm","briefdescription": "returns the two-norm of a matrix","detaildescription": "","group" : "math/blas/matrix","see": [],"warning": [],"note": []},"collection/list/union" : {"name" : "collection/list/union","id" : "d6/d6c/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1list_1_1CUnion","briefdescription": "creates the union between lists (not unique).","detaildescription": "Creates the union of all arguemnts with removing nested structures $ \\cup X_i \\forall i \\in \\mathbb{N} $ , the action fails never <pre><code>U=collection/list/union(L,[1,2],[3,4,[5,6]];\n</code></pre> ","group" : "collection/list","see": [],"warning": [],"note": []},"collection/list/unique" : {"name" : "collection/list/unique","id" : "da/d46/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1list_1_1CUnique","briefdescription": "returns an unique list of the list.","detaildescription": "All arguments are collections and the action removes nested structures and returns a list with unique elements, the action fails never <pre><code>U=collection/list/unique(L);\n</code></pre> ","group" : "collection/list","see": [],"warning": [],"note": []},"generic/string/upper" : {"name" : "generic/string/upper","id" : "d5/d01/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1generic_1_1string_1_1CUpper","briefdescription": "action to create an upper-case string","detaildescription": "","group" : "generic/string","see": [],"warning": [],"note": []},"math/linearprogram/valueconstraint" : {"name" : "math/linearprogram/valueconstraint","id" : "d7/d6d/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1math_1_1linearprogram_1_1CValueConstraint","briefdescription": "add a linear value constraint to the LP with the definition $ \\sum_{i=1} c_i \\cdot x_i = v $ , $ \\sum_{i=1} c_i \\cdot x_i \\geq v $  $ \\sum_{i=1} c_i \\cdot x_i \\leq v $ ","detaildescription": "","group" : "math/linearprogram","see": [],"warning": [],"note": []},"collection/map/values" : {"name" : "collection/map/values","id" : "d5/dfb/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1map_1_1CValues","briefdescription": "returns all values of the map","detaildescription": "","group" : "collection/map","see": [],"warning": [],"note": []},"rest/xmlobject" : {"name" : "rest/xmlobject","id" : "d3/d0e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1rest_1_1CXMLObject","briefdescription": "action to call a restful webservice with XML data.","detaildescription": "Creates a literal from an XML REST-webservice, first argument is the URL of the webservice and second argument the functor of the literal <pre><code>W=rest/xmlobject(\"https://en.wikipedia.org/wiki/Special:Export/AgentSpeak\",\"wikipedia\");\n</code></pre> ","group" : "rest","see": ["https://en.wikipedia.org/wiki/Representational_state_transfer","https://en.wikipedia.org/wiki/Web_service","https://en.wikipedia.org/wiki/XML"],"warning": [],"note": []},"collection/list/zip" : {"name" : "collection/list/zip","id" : "df/dff/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1buildin_1_1collection_1_1list_1_1CZip","briefdescription": "creates a list of tuples with elements of two lists.","detaildescription": "Creates list of tupels of both list arguments $ \\mathbb{X} $ and $ \\mathbb{Y} $ and returns a list of $ \\langle x_i, y_i \\rangle $ , the action fails never <pre><code>T=collection/list/zip([1,,3,5,7],[2,4,6,8]);\n</code></pre> ","group" : "collection/list","see": [],"warning": [],"note": []}}